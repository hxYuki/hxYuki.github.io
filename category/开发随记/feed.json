{
    "version": "https://jsonfeed.org/version/1",
    "title": "镜间 • All posts by \"开发随记\" category",
    "description": "思想从时光中溶出凝结",
    "home_page_url": "https://hxyuki.github.io",
    "items": [
        {
            "id": "https://hxyuki.github.io/2021/10/28/CSharp%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%93%8D%E4%BD%9C/",
            "url": "https://hxyuki.github.io/2021/10/28/CSharp%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%93%8D%E4%BD%9C/",
            "title": "C# 的一些问题操作",
            "date_published": "2021-10-27T16:45:24.000Z",
            "content_html": "<h2 id=\"前情提要\"><a class=\"markdownIt-Anchor\" href=\"#前情提要\">#</a> 前情提要</h2>\n<p>作为 <code>async</code>   <code>await</code>  关键字源头的 C#，搞些异步操作已经是很舒心的了，不过近来 <code>.Net 6</code>  就要出了，新版本里默认启用了 <code>nullable</code>  特性，当享受着全局的空安全的时候，可能莫名其妙的发现有些地方出现了碍眼的<ins class=\"wavy success\">绿色下划波浪线</ins>。 💢</p>\n<h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<p>问题代码多半是这样:</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">await</span> something<span class=\"token punctuation\">?.</span><span class=\"token function\">BalaBala</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>然后警告你<ruby>解引用了一个可能为空的引用<rp>【</rp><rt>Dereference  of  a possibly null reference</rt><rp>】</rp></ruby>。<br>\n这是因为 <code>?.</code>  操作符在变量为 <code>null</code>  的时候会把自己整段都变为 <code>null</code> ，也就是说整个 <code>await</code>  等待了一个 <code>Task&lt;ReturnType&gt;?</code> ，而目前的 <code>await</code>  并不想等待一个寂寞。<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<h2 id=\"workaround\"><a class=\"markdownIt-Anchor\" href=\"#workaround\">#</a> Workaround</h2>\n<p>作为有些许追求的人，一定要找个比较优雅的写法，结合了一些观察学习，我的答案是：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FunExt</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">SafeExecute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">Task<span class=\"token punctuation\">?</span></span> task<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>task<span class=\"token operator\">??</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>考虑到可能的执行失败时需要默认值的情况，可以加一个这个: <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup> <span class=\"spoiler\" title=\"...\">？强烈怀疑，真的会有这种需求吗</span></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token generic-method\"><span class=\"token function\">SafeExecute</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">Task<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">?</span></span> task<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> task <span class=\"token operator\">??</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">FromResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>使用方式为：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span>something<span class=\"token punctuation\">?.</span><span class=\"token function\">BalaBalaA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SafeExcute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>虽然还是没能避免多加一对括号，不过总比去进行麻烦的判断要好了那么一点。</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>确实有这么一个新特性的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RvdG5ldC9jc2hhcnBsYW5nL2Jsb2IvbWFpbi9wcm9wb3NhbHMvbnVsbC1jb25kaXRpb25hbC1hd2FpdC5tZA==\">提议</span>，我开始看了觉得不明所以，直到自己被警告秀了一脸 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>原写法来自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjc1NTEwOTAvYmVzdC13YXktdG8taGFuZGxlLW51bGwtdGFzay1pbnNpZGUtYXN5bmMtbWV0aG9k\">StackOverflow</span> 不过其并未考虑到 <code>default(T)</code>  的类型为 <code>T?</code> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "言尽于行",
                "C#",
                "await",
                "nullable"
            ]
        }
    ]
}