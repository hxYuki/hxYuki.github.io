{
    "version": "https://jsonfeed.org/version/1",
    "title": "镜间",
    "description": "思想从时光中溶出凝结",
    "home_page_url": "https://hxyuki.github.io",
    "items": [
        {
            "id": "https://hxyuki.github.io/2021/10/28/CSharp%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%93%8D%E4%BD%9C/",
            "url": "https://hxyuki.github.io/2021/10/28/CSharp%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%93%8D%E4%BD%9C/",
            "title": "C# 的一些问题操作",
            "date_published": "2021-10-27T16:45:24.000Z",
            "content_html": "<h2 id=\"前情提要\"><a class=\"markdownIt-Anchor\" href=\"#前情提要\">#</a> 前情提要</h2>\n<p>作为 <code>async</code>   <code>await</code>  关键字源头的 C#，搞些异步操作已经是很舒心的了，不过近来 <code>.Net 6</code>  就要出了，新版本里默认启用了 <code>nullable</code>  特性，当享受着全局的空安全的时候，可能莫名其妙的发现有些地方出现了碍眼的<ins class=\"wavy success\">绿色下划波浪线</ins>。 💢</p>\n<h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<p>问题代码多半是这样:</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">await</span> something<span class=\"token punctuation\">?.</span><span class=\"token function\">BalaBala</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>然后警告你<ruby>解引用了一个可能为空的引用<rp>【</rp><rt>Dereference  of  a possibly null reference</rt><rp>】</rp></ruby>。<br>\n这是因为 <code>?.</code>  操作符在变量为 <code>null</code>  的时候会把自己整段都变为 <code>null</code> ，也就是说整个 <code>await</code>  等待了一个 <code>Task&lt;ReturnType&gt;?</code> ，而目前的 <code>await</code>  并不想等待一个寂寞。<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<h2 id=\"workaround\"><a class=\"markdownIt-Anchor\" href=\"#workaround\">#</a> Workaround</h2>\n<p>作为有些许追求的人，一定要找个比较优雅的写法，结合了一些观察学习，我的答案是：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FunExt</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">SafeExecute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">Task<span class=\"token punctuation\">?</span></span> task<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>task<span class=\"token operator\">??</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>考虑到可能的执行失败时需要默认值的情况，可以加一个这个: <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup> <span class=\"spoiler\" title=\"...\">？强烈怀疑，真的会有这种需求吗</span></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token generic-method\"><span class=\"token function\">SafeExecute</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">Task<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">?</span></span> task<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> task <span class=\"token operator\">??</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">FromResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>使用方式为：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span>something<span class=\"token punctuation\">?.</span><span class=\"token function\">BalaBalaA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SafeExcute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>虽然还是没能避免多加一对括号，不过总比去进行麻烦的判断要好了那么一点。</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>确实有这么一个新特性的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RvdG5ldC9jc2hhcnBsYW5nL2Jsb2IvbWFpbi9wcm9wb3NhbHMvbnVsbC1jb25kaXRpb25hbC1hd2FpdC5tZA==\">提议</span>，我开始看了觉得不明所以，直到自己被警告秀了一脸 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>原写法来自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjc1NTEwOTAvYmVzdC13YXktdG8taGFuZGxlLW51bGwtdGFzay1pbnNpZGUtYXN5bmMtbWV0aG9k\">StackOverflow</span> 不过其并未考虑到 <code>default(T)</code>  的类型为 <code>T?</code> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "言尽于行",
                "C#",
                "await",
                "nullable"
            ]
        },
        {
            "id": "https://hxyuki.github.io/2021/07/21/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%B8%AA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6hint%E5%B7%A5%E5%85%B7%E7%9A%84%E6%83%B3%E6%B3%95/",
            "url": "https://hxyuki.github.io/2021/07/21/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%B8%AA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6hint%E5%B7%A5%E5%85%B7%E7%9A%84%E6%83%B3%E6%B3%95/",
            "title": "关于一个配置文件hint工具的想法",
            "date_published": "2021-07-20T16:00:00.000Z",
            "content_html": "<h2 id=\"始\"><a class=\"markdownIt-Anchor\" href=\"#始\">#</a> 始</h2>\n<p>最近试着弄了下一直想做的博客，选主题选的眼都花了（笑），然而年幼无知的我还不知道后面有什么东西在等着我 —— 指一大堆乱七八糟的配置文件，它们天真而又纯洁，等着我来带它们走向光明的未来。<br>\n其实认真的讲，我个人始终有一种追求：人应该尽可能少的进行没有意义劳作，而很明显，如果我想以一种预先约定的格式进行输入，而需要我全面学习这个约定，否则便无从知晓某一项是否被包含在约定中，也算是部分无意义 —— 个人来讲倾向于在尝试中学习，如果能在输入的时候把可用的项目全部提供就很令人舒适，要是命名又十分直观真是再感激不过了。</p>\n<p>其实在此之前有遇到过包含自动提示的配置文件，比如 <code>VS Code</code>  自身的配置文件，或者是 <code>Visual Studio</code>  的 <code>JSON 架构</code> ，都能实现配置项、配置值的提示，不过一个是靠编辑器本身开挂，一个普及度低写起来也繁琐的一 * 并且还是依赖了编辑器的外挂从网络获取架构信息。<br>\n所以我想的是为配置文件写一个配置文件，再写个编辑器扩展什么的来进行 Hint。编写起来也得很简洁才行，方便使用。<span class=\"spoiler\" title=\"...\">毕竟我也是个臭敲代码的，代码以外的东西越简单越好</span></p>\n<h2 id=\"初步的设计\"><a class=\"markdownIt-Anchor\" href=\"#初步的设计\">#</a> 初步的设计</h2>\n<h3 id=\"specs\"><a class=\"markdownIt-Anchor\" href=\"#specs\">#</a> Specs</h3>\n<p>文件名： <code>.hintc</code> <br>\n 对于同目录内所有子目录均有效，且覆盖父目录中的 <code>.hintc</code>  文件</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>config.json &gt;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * connection &gt;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        * username &#x3D; string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        * password &#x3D; string</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    - options &gt; </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        - encryption &#x3D; bool</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        - method &#x3D; (foo, bar)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        - alternate_conn : @connection &#x2F;&#x2F; @config.json&gt;connection</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        - timeout &#x3D; number</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        - load :</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            * type &#x3D; string</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            * data &#x3D; string</pre></td></tr></table></figure><p>当前预计使用如下关键字 <code>string</code>   <code>bool</code>   <code>number</code>   <code>date</code>   <code>&gt;</code>   <code>=</code>   <code>:</code>   <code>*</code>   <code>-</code>   <code>@</code>   <code>(</code>   <code>)</code>   <code>,</code></p>\n<p><code>&gt;</code>  表明项包含后续定义的字段<br>\n <code>=</code>  表明该项接受一个直接值<br>\n <code>:</code>  表明项接受一个其后类型的数组</p>\n<p><code>*</code>  声明该项在父项中为必须项<br>\n <code>-</code>  声明该项在父项中为可选项</p>\n<p><code>string</code>   <code>bool</code>   <code>number</code>   <code>date</code>  等字符串于值类型标识<br>\n <code>@</code>  后接一个已经定义过的项，其值与指向的项内容相同<br>\n <code>(</code>   <code>)</code>  用于表示一个列表，其值为其中任意一个元素<br>\n <code>,</code>  元素分隔</p>\n<div class=\"note info note\">\n<p>该类符号用于进行值验证，与正则表达式接近，但似乎无法实现详细的提示，需要进一步实现尝试。</p>\n</div>\n<h3 id=\"从声明文件生成其配置文件\"><a class=\"markdownIt-Anchor\" href=\"#从声明文件生成其配置文件\">#</a> 从声明文件生成其配置文件</h3>\n<p>既然这么一个声明文件是具体配置无关的，那么理应可以通过扩展的形式支持多种配置文件。 e.g. JSON, yaml … <s>似乎一笔带过了什么难搞的东西</s></p>\n<p>那么反过来从这一个声明文件生成一个样例配置文件应该也是可行的，于是就愉快的把坑挖大了。</p>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>还没想好名字，不如叫 ConfHint 吧，后缀名确定是 hintc 了吗？</p>\n<p><span class=\"spoiler blur\" title=\"...\">h 这个字母是真烦，前面可以接 80% 的字母都不意外</span></p>\n",
            "tags": [
                "思维火花"
            ]
        },
        {
            "id": "https://hxyuki.github.io/2021/06/29/hello-world/",
            "url": "https://hxyuki.github.io/2021/06/29/hello-world/",
            "title": "Hello World",
            "date_published": "2021-06-29T06:20:21.000Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "initialization"
            ]
        }
    ]
}