<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.yukx.io</id>
    <title>镜碑</title>
    <subtitle>镜影行</subtitle>
    <icon>https://blog.yukx.io/images/favicon.ico</icon>
    <link href="https://blog.yukx.io" />
    <author>
      <name>Yukx</name>
    </author>
    <updated>2022-06-11T18:38:51.000Z</updated>
    <entry>
        <id>https://blog.yukx.io/2022/06/game-dev-journal-1-hud-minimap/</id>
        <title>游戏开发日志(其一)：HUD、小地图</title>
        <link rel="alternate" href="https://blog.yukx.io/2022/06/game-dev-journal-1-hud-minimap/"/>
        <content type="html">&lt;div class=&#34;note default no-icon&#34;&gt;
&lt;p&gt;某人日常不务正业务现已开拓至游戏开发挥年复一年的沉积极放光吧！&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;游戏具体情况暂且不提，后续也将在 github 上开源。&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;hud&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hud&#34;&gt;#&lt;/a&gt; HUD&lt;/h2&gt;
&lt;p&gt;首先我们秉持优良传统，创建一个根 GameObject，&lt;br /&gt;
在其内部添加 Canvas，在 Canvas 内添加我们需要的 UI 物体即可。&lt;br /&gt;
&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/hxYuki/im-base@master/object-hierachy.png&#34; alt=&#34;对象层级示例&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;小地图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小地图&#34;&gt;#&lt;/a&gt; 小地图&lt;/h2&gt;
&lt;p&gt;小地图有很多种实现方法，这里暂且采用最简单的，添加第二个 Camera 的方法。&lt;/p&gt;
&lt;h3 id=&#34;custom-render-texture&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#custom-render-texture&#34;&gt;#&lt;/a&gt; Custom Render Texture&lt;/h3&gt;
&lt;p&gt;首先新建一个 Custom Render Texture, 用于接收摄像机的内容并显示在指定位置。&lt;/p&gt;
&lt;h3 id=&#34;map-camera&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#map-camera&#34;&gt;#&lt;/a&gt; Map Camera&lt;/h3&gt;
&lt;p&gt;新建一个 Camera，并创建一个 layer: minimap，用于显示单位的缩略图。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/hxYuki/im-base@master/20220612140021.png&#34; alt=&#34;Camera 属性&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置 Clear Flag 为 Solid Color ，&lt;ruby&gt; &lt;rt&gt;&lt;/rt&gt;投影&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;Projection&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; &lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;为&lt;ruby&gt; &lt;rt&gt;&lt;/rt&gt;正交&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;Orthographic&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; &lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;，以排除透视的影响。&lt;br /&gt;
设置 &lt;strong&gt;Culling Mask&lt;/strong&gt; 取消选中其他 layer 仅保留刚刚新建的 minimap，这样小地图中不会显示多余的内容。(在其他 Camera 中也需要保持不要选中 minimap)&lt;/p&gt;
&lt;p&gt;设置 Target Texture 为刚刚创建的 Custom Render Texture。&lt;/p&gt;
&lt;h3 id=&#34;minimap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#minimap&#34;&gt;#&lt;/a&gt; Minimap&lt;/h3&gt;
&lt;p&gt;在你喜欢的地方添加一个  &lt;code&gt;UI &amp;gt; Raw Image&lt;/code&gt; ，将其 Texture 设置为刚刚创建的 Custom Render Texture。&lt;br /&gt;
至此小地图的基本显示功能完成，后续需要在想要显示在地图中的物体内完成。&lt;/p&gt;
&lt;h3 id=&#34;其他单位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他单位&#34;&gt;#&lt;/a&gt; 其他单位&lt;/h3&gt;
&lt;p&gt;在想要显示的物体内添加一个 Sprite，指定其 Layer 为 minimap。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fastly.jsdelivr.net/gh/hxYuki/im-base@master/20220612143055.png&#34; alt=&#34;示例效果&#34; /&gt;&lt;/p&gt;
&lt;p&gt;大功告成！&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;Camera size 与 Worldspace 内的坐标尺度一致，可按需要调整地图大小。&lt;/p&gt;
&lt;/div&gt;
</content>
        <category term="开发随记" scheme="https://blog.yukx.io/categories/%E5%BC%80%E5%8F%91%E9%9A%8F%E8%AE%B0/" />
        <category term="游戏开发" scheme="https://blog.yukx.io/categories/%E5%BC%80%E5%8F%91%E9%9A%8F%E8%AE%B0/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/" />
        <category term="conquest of star" scheme="https://blog.yukx.io/categories/%E5%BC%80%E5%8F%91%E9%9A%8F%E8%AE%B0/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/conquest-of-star/" />
        <category term="Unity" scheme="https://blog.yukx.io/tags/Unity/" />
        <category term="HUD" scheme="https://blog.yukx.io/tags/HUD/" />
        <category term="小地图" scheme="https://blog.yukx.io/tags/%E5%B0%8F%E5%9C%B0%E5%9B%BE/" />
        <updated>2022-06-11T18:38:51.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.yukx.io/2022/06/one-possible-reason-for-steam-not-rememebering-password/</id>
        <title>Steam记住密码失效的一种原因</title>
        <link rel="alternate" href="https://blog.yukx.io/2022/06/one-possible-reason-for-steam-not-rememebering-password/"/>
        <content type="html">&lt;p&gt;你可能有第二个设备在登录时记住了密码，第一个设备就无法记住密码了。&lt;/p&gt;
&lt;p&gt;取消所有其他设备授权也没有用，&lt;br /&gt;
实在是让我恼火了好久，直到今天打开了很久没用的另一个电脑，退出了上面的 Steam。&lt;/p&gt;
</content>
        <category term="闲话" scheme="https://blog.yukx.io/categories/%E9%97%B2%E8%AF%9D/" />
        <category term="Steam无法记住密码" scheme="https://blog.yukx.io/tags/Steam%E6%97%A0%E6%B3%95%E8%AE%B0%E4%BD%8F%E5%AF%86%E7%A0%81/" />
        <category term="Steam" scheme="https://blog.yukx.io/tags/Steam/" />
        <updated>2022-06-02T06:14:28.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.yukx.io/2022/03/rust-try/</id>
        <title>Rust初体验</title>
        <link rel="alternate" href="https://blog.yukx.io/2022/03/rust-try/"/>
        <content type="html">&lt;p&gt;近日来心有戚戚终日惶惶，游戏亦觉无趣，便想着尝试下一直以来想学下的 Rust&lt;/p&gt;
&lt;p&gt;直接进行一个&lt;a href=&#34;https://kaisery.github.io/trpl-zh-cn/title-page.html&#34;&gt; The Book&lt;/a&gt; 的搜索！ &lt;span class=&#34;rainbow&#34;&gt;汉化赛高！&lt;/span&gt; &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;话说这个中文版的 Rust 竟然比官网还高&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;直接进行一个小练！&lt;/p&gt;
&lt;p&gt;看完了前三章，算是对语法方面做了个基本的了解，体验下来有种奇妙的舒适感，比如变量隐藏、 &lt;code&gt;.expect()&lt;/code&gt;  或 &lt;code&gt;match&lt;/code&gt;  进行的错误处理、或是 &lt;code&gt;break&lt;/code&gt;  返回值这种东西在有需要的时候真的是能极大的提升幸福感，让人对后面的内容产生了更浓厚的期待。&lt;/p&gt;
&lt;p&gt;浅尝至此，暂且搁笔。另请允许我附上自己渣的斐波那契数列。&lt;/p&gt;
&lt;figure class=&#34;highlight rust&#34;&gt;&lt;figcaption data-lang=&#34;rust&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;std&lt;span class=&#34;token punctuation&#34;&gt;::&lt;/span&gt;&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;fn&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;mut&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token namespace&#34;&gt;io&lt;span class=&#34;token punctuation&#34;&gt;::&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;read_line&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;mut&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;failed to open input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;trim&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;failed to parse&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;mut&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;mut&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token macro property&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#34;&amp;#123;&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;match&lt;/span&gt; n &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            _ &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;mut&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..=&lt;/span&gt;n &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                r&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="俗世以外的消遣" scheme="https://blog.yukx.io/categories/%E4%BF%97%E4%B8%96%E4%BB%A5%E5%A4%96%E7%9A%84%E6%B6%88%E9%81%A3/" />
        <category term="Rust" scheme="https://blog.yukx.io/tags/Rust/" />
        <category term="学习随记" scheme="https://blog.yukx.io/tags/%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/" />
        <updated>2022-03-26T06:10:56.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.yukx.io/2021/11/%E8%AE%A9%E9%9D%99%E6%80%81%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%A3%9E%E8%B5%B7%E6%9D%A5/</id>
        <title>让静态的博客飞起来</title>
        <link rel="alternate" href="https://blog.yukx.io/2021/11/%E8%AE%A9%E9%9D%99%E6%80%81%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%A3%9E%E8%B5%B7%E6%9D%A5/"/>
        <content type="html">&lt;p&gt;最近终于算是折腾完了博客、主题这些&lt;s&gt;要命&lt;/s&gt;的东西，中途还给咱选择的主题修了 BUG &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;一度还因为 BUG 想自己写主题来着的说&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;不过，终于，现在一切都已经妥当，让 CDN 什么的先在一边放着吧！我要开始输出了！我看着托管博客的仓库，突然邪念大起：&lt;/p&gt;
&lt;p&gt;「用 Github Actions 自动部署博客已经是基操了，再加上 Github Codespaces 岂不是就再也不用被仓库的位置限制了？」&lt;/p&gt;
&lt;p&gt;不过这套流程的难点还是在于要配置好 Github Actions 的自动部署，大体流程而言都差不多，生成一对密钥，公钥放  &lt;code&gt;[username].github.io&lt;/code&gt;  ，私钥放到博客源仓库的  &lt;code&gt;secret&lt;/code&gt;  中，在市场里找一套部署 Hexo 的 Action 就大功告成 ——&lt;/p&gt;
&lt;p&gt;Star 最多的 hexo-action 只有简单的部署操作，而本博客启用了基于 algolia 的搜索功能，需要在部署前将改动同步至 Algolia ，又不想花时间再精挑细选了，于是动了下脑子，基于 hexo-action 添加了一份执行  &lt;code&gt;hexo a&lt;/code&gt;  的选项&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt;，这下就完美解决了个人的需求，可以愉快的随处&lt;ruby&gt;写&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;guan&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; 文章&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;shui&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 了！&lt;/p&gt;
&lt;hr class=&#34;footnotes-sep&#34; /&gt;
&lt;section class=&#34;footnotes&#34;&gt;
&lt;ol class=&#34;footnotes-list&#34;&gt;
&lt;li id=&#34;fn1&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;个人魔改的 hexo action 为  &lt;code&gt;hxYuki/hexo-action@master&lt;/code&gt;  欢迎取用。 &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
        <category term="生命在于折腾" scheme="https://blog.yukx.io/categories/%E7%94%9F%E5%91%BD%E5%9C%A8%E4%BA%8E%E6%8A%98%E8%85%BE/" />
        <category term="MyBlog" scheme="https://blog.yukx.io/categories/%E7%94%9F%E5%91%BD%E5%9C%A8%E4%BA%8E%E6%8A%98%E8%85%BE/MyBlog/" />
        <category term="言尽于行" scheme="https://blog.yukx.io/tags/%E8%A8%80%E5%B0%BD%E4%BA%8E%E8%A1%8C/" />
        <category term="开发之外的事" scheme="https://blog.yukx.io/tags/%E5%BC%80%E5%8F%91%E4%B9%8B%E5%A4%96%E7%9A%84%E4%BA%8B/" />
        <category term="Github Codespaces" scheme="https://blog.yukx.io/tags/Github-Codespaces/" />
        <category term="Github Actions" scheme="https://blog.yukx.io/tags/Github-Actions/" />
        <category term="Algolia" scheme="https://blog.yukx.io/tags/Algolia/" />
        <updated>2021-11-16T05:54:43.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.yukx.io/2021/10/CSharp%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%93%8D%E4%BD%9C/</id>
        <title>C# 的一些问题操作</title>
        <link rel="alternate" href="https://blog.yukx.io/2021/10/CSharp%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%93%8D%E4%BD%9C/"/>
        <content type="html">&lt;h2 id=&#34;前情提要&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前情提要&#34;&gt;#&lt;/a&gt; 前情提要&lt;/h2&gt;
&lt;p&gt;作为 &lt;code&gt;async&lt;/code&gt;   &lt;code&gt;await&lt;/code&gt;  关键字源头的 C#，搞些异步操作已经是很舒心的了，不过近来 &lt;code&gt;.Net 6&lt;/code&gt;  就要出了，新版本里默认启用了 &lt;code&gt;nullable&lt;/code&gt;  特性，当享受着全局的空安全的时候，可能莫名其妙的发现有些地方出现了碍眼的&lt;ins class=&#34;wavy success&#34;&gt;绿色下划波浪线&lt;/ins&gt;。 💢&lt;/p&gt;
&lt;h2 id=&#34;问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题&#34;&gt;#&lt;/a&gt; 问题&lt;/h2&gt;
&lt;p&gt;问题代码多半是这样:&lt;/p&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;figcaption data-lang=&#34;C#&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; something&lt;span class=&#34;token punctuation&#34;&gt;?.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;BalaBala&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后警告你&lt;ruby&gt;解引用了一个可能为空的引用&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;Dereference  of  a possibly null reference&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;。&lt;br /&gt;
这是因为 &lt;code&gt;?.&lt;/code&gt;  操作符在变量为 &lt;code&gt;null&lt;/code&gt;  的时候会把自己整段都变为 &lt;code&gt;null&lt;/code&gt; ，也就是说整个 &lt;code&gt;await&lt;/code&gt;  等待了一个 &lt;code&gt;Task&amp;lt;ReturnType&amp;gt;?&lt;/code&gt; ，而目前的 &lt;code&gt;await&lt;/code&gt;  并不想等待一个寂寞。&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;workaround&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#workaround&#34;&gt;#&lt;/a&gt; Workaround&lt;/h2&gt;
&lt;p&gt;作为有些许追求的人，一定要找个比较优雅的写法，结合了一些观察学习，我的答案是：&lt;/p&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;figcaption data-lang=&#34;C#&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FunExt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token return-type class-name&#34;&gt;Task&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;SafeExecute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Task&lt;span class=&#34;token punctuation&#34;&gt;?&lt;/span&gt;&lt;/span&gt; task&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;task&lt;span class=&#34;token operator&#34;&gt;??&lt;/span&gt; Task&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Delay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;考虑到可能的执行失败时需要默认值的情况，可以加一个这个: &lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn2&#34; id=&#34;fnref2&#34;&gt;[2]&lt;/a&gt;&lt;/sup&gt; &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;？强烈怀疑，真的会有这种需求吗&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;figcaption data-lang=&#34;C#&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token return-type class-name&#34;&gt;Task&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&#34;token punctuation&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token generic-method&#34;&gt;&lt;span class=&#34;token function&#34;&gt;SafeExecute&lt;/span&gt;&lt;span class=&#34;token generic class-name&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Task&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&#34;token punctuation&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;?&lt;/span&gt;&lt;/span&gt; task&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; task &lt;span class=&#34;token operator&#34;&gt;??&lt;/span&gt; Task&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;FromResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token type-expression class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用方式为：&lt;/p&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;figcaption data-lang=&#34;C#&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;something&lt;span class=&#34;token punctuation&#34;&gt;?.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;BalaBalaA&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;SafeExcute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;虽然还是没能避免多加一对括号，不过总比去进行麻烦的判断要好了那么一点。&lt;/p&gt;
&lt;hr class=&#34;footnotes-sep&#34; /&gt;
&lt;section class=&#34;footnotes&#34;&gt;
&lt;ol class=&#34;footnotes-list&#34;&gt;
&lt;li id=&#34;fn1&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;确实有这么一个新特性的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RvdG5ldC9jc2hhcnBsYW5nL2Jsb2IvbWFpbi9wcm9wb3NhbHMvbnVsbC1jb25kaXRpb25hbC1hd2FpdC5tZA==&#34; title=&#34;null conditional await&#34;&gt;提议&lt;/span&gt;，我开始看了觉得不明所以，直到自己被警告秀了一脸 &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn2&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;原写法来自 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjc1NTEwOTAvYmVzdC13YXktdG8taGFuZGxlLW51bGwtdGFzay1pbnNpZGUtYXN5bmMtbWV0aG9k&#34; title=&#34;By BrainSlugs83&#34;&gt;StackOverflow&lt;/span&gt; 不过其并未考虑到 &lt;code&gt;default(T)&lt;/code&gt;  的类型为 &lt;code&gt;T?&lt;/code&gt; &lt;a href=&#34;#fnref2&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
        <category term="开发随记" scheme="https://blog.yukx.io/categories/%E5%BC%80%E5%8F%91%E9%9A%8F%E8%AE%B0/" />
        <category term="言尽于行" scheme="https://blog.yukx.io/tags/%E8%A8%80%E5%B0%BD%E4%BA%8E%E8%A1%8C/" />
        <category term="C#" scheme="https://blog.yukx.io/tags/C/" />
        <category term="await" scheme="https://blog.yukx.io/tags/await/" />
        <category term="nullable" scheme="https://blog.yukx.io/tags/nullable/" />
        <updated>2021-10-27T16:45:24.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.yukx.io/2021/07/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%B8%AA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6hint%E5%B7%A5%E5%85%B7%E7%9A%84%E6%83%B3%E6%B3%95/</id>
        <title>关于一个配置文件hint工具的想法</title>
        <link rel="alternate" href="https://blog.yukx.io/2021/07/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%B8%AA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6hint%E5%B7%A5%E5%85%B7%E7%9A%84%E6%83%B3%E6%B3%95/"/>
        <content type="html">&lt;h2 id=&#34;始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#始&#34;&gt;#&lt;/a&gt; 始&lt;/h2&gt;
&lt;p&gt;最近试着弄了下一直想做的博客，选主题选的眼都花了（笑），然而年幼无知的我还不知道后面有什么东西在等着我 —— 指一大堆乱七八糟的配置文件，它们天真而又纯洁，等着我来带它们走向光明的未来。&lt;br /&gt;
其实认真的讲，我个人始终有一种追求：人应该尽可能少的进行没有意义劳作，而很明显，如果我想以一种预先约定的格式进行输入，而需要我全面学习这个约定，否则便无从知晓某一项是否被包含在约定中，也算是部分无意义 —— 个人来讲倾向于在尝试中学习，如果能在输入的时候把可用的项目全部提供就很令人舒适，要是命名又十分直观真是再感激不过了。&lt;/p&gt;
&lt;p&gt;其实在此之前有遇到过包含自动提示的配置文件，比如 &lt;code&gt;VS Code&lt;/code&gt;  自身的配置文件，或者是 &lt;code&gt;Visual Studio&lt;/code&gt;  的 &lt;code&gt;JSON 架构&lt;/code&gt; ，都能实现配置项、配置值的提示，不过一个是靠编辑器本身开挂，一个普及度低写起来也繁琐的一 * 并且还是依赖了编辑器的外挂从网络获取架构信息。&lt;br /&gt;
所以我想的是为配置文件写一个配置文件，再写个编辑器扩展什么的来进行 Hint。编写起来也得很简洁才行，方便使用。&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;毕竟我也是个臭敲代码的，代码以外的东西越简单越好&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;初步的设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初步的设计&#34;&gt;#&lt;/a&gt; 初步的设计&lt;/h2&gt;
&lt;h3 id=&#34;specs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#specs&#34;&gt;#&lt;/a&gt; Specs&lt;/h3&gt;
&lt;p&gt;文件名： &lt;code&gt;.hintc&lt;/code&gt; &lt;br /&gt;
 对于同目录内所有子目录均有效，且覆盖父目录中的 &lt;code&gt;.hintc&lt;/code&gt;  文件&lt;/p&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;config.json &amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    * connection &amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        * username &amp;#x3D; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        * password &amp;#x3D; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - options &amp;gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - encryption &amp;#x3D; bool&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - method &amp;#x3D; (foo, bar)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - alternate_conn : @connection &amp;#x2F;&amp;#x2F; @config.json&amp;gt;connection&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - timeout &amp;#x3D; number&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - load :&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            * type &amp;#x3D; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            * data &amp;#x3D; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当前预计使用如下关键字 &lt;code&gt;string&lt;/code&gt;   &lt;code&gt;bool&lt;/code&gt;   &lt;code&gt;number&lt;/code&gt;   &lt;code&gt;date&lt;/code&gt;   &lt;code&gt;&amp;gt;&lt;/code&gt;   &lt;code&gt;=&lt;/code&gt;   &lt;code&gt;:&lt;/code&gt;   &lt;code&gt;*&lt;/code&gt;   &lt;code&gt;-&lt;/code&gt;   &lt;code&gt;@&lt;/code&gt;   &lt;code&gt;(&lt;/code&gt;   &lt;code&gt;)&lt;/code&gt;   &lt;code&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;  表明项包含后续定义的字段&lt;br /&gt;
 &lt;code&gt;=&lt;/code&gt;  表明该项接受一个直接值&lt;br /&gt;
 &lt;code&gt;:&lt;/code&gt;  表明项接受一个其后类型的数组&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;  声明该项在父项中为必须项&lt;br /&gt;
 &lt;code&gt;-&lt;/code&gt;  声明该项在父项中为可选项&lt;/p&gt;
&lt;p&gt;&lt;code&gt;string&lt;/code&gt;   &lt;code&gt;bool&lt;/code&gt;   &lt;code&gt;number&lt;/code&gt;   &lt;code&gt;date&lt;/code&gt;  等字符串于值类型标识&lt;br /&gt;
 &lt;code&gt;@&lt;/code&gt;  后接一个已经定义过的项，其值与指向的项内容相同&lt;br /&gt;
 &lt;code&gt;(&lt;/code&gt;   &lt;code&gt;)&lt;/code&gt;  用于表示一个列表，其值为其中任意一个元素&lt;br /&gt;
 &lt;code&gt;,&lt;/code&gt;  元素分隔&lt;/p&gt;
&lt;div class=&#34;note info note&#34;&gt;
&lt;p&gt;该类符号用于进行值验证，与正则表达式接近，但似乎无法实现详细的提示，需要进一步实现尝试。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;从声明文件生成其配置文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#从声明文件生成其配置文件&#34;&gt;#&lt;/a&gt; 从声明文件生成其配置文件&lt;/h3&gt;
&lt;p&gt;既然这么一个声明文件是具体配置无关的，那么理应可以通过扩展的形式支持多种配置文件。 e.g. JSON, yaml … &lt;s&gt;似乎一笔带过了什么难搞的东西&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;那么反过来从这一个声明文件生成一个样例配置文件应该也是可行的，于是就愉快的把坑挖大了。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;还没想好名字，不如叫 ConfHint 吧，后缀名确定是 hintc 了吗？&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;spoiler blur&#34; title=&#34;你知道得太多了&#34;&gt;h 这个字母是真烦，前面可以接 80% 的字母都不意外&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="挖坑" scheme="https://blog.yukx.io/categories/%E6%8C%96%E5%9D%91/" />
        <category term="开发" scheme="https://blog.yukx.io/categories/%E6%8C%96%E5%9D%91/%E5%BC%80%E5%8F%91/" />
        <category term="配置文件 Hint 工具" scheme="https://blog.yukx.io/categories/%E6%8C%96%E5%9D%91/%E5%BC%80%E5%8F%91/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-Hint-%E5%B7%A5%E5%85%B7/" />
        <category term="思维火花" scheme="https://blog.yukx.io/tags/%E6%80%9D%E7%BB%B4%E7%81%AB%E8%8A%B1/" />
        <updated>2021-07-20T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.yukx.io/2021/06/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://blog.yukx.io/2021/06/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34; title=&#34;1234&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&amp;nbsp;$&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo new &lt;span class=&#34;token string&#34;&gt;&#34;My New Post&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;pwd&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&amp;nbsp;$&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo server&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&amp;nbsp;$&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo generate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&amp;nbsp;$&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo deploy&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="hello world" scheme="https://blog.yukx.io/tags/hello-world/" />
        <updated>2021-06-29T06:20:21.000Z</updated>
    </entry>
</feed>
