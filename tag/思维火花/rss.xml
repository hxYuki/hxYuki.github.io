<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>镜室 • Posts by &#34;思维火花&#34; tag</title>
        <link>https://hxyuki.github.io</link>
        <description>思想从时光中溶出凝结</description>
        <language>zh-CN</language>
        <pubDate>Wed, 21 Jul 2021 00:00:00 +0800</pubDate>
        <lastBuildDate>Wed, 21 Jul 2021 00:00:00 +0800</lastBuildDate>
        <category>initialization</category>
        <category>思维火花</category>
        <item>
            <guid isPermalink="true">https://hxyuki.github.io/2021/07/21/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%B8%AA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6hint%E5%B7%A5%E5%85%B7%E7%9A%84%E6%83%B3%E6%B3%95/</guid>
            <title>关于一个配置文件hint工具的想法</title>
            <link>https://hxyuki.github.io/2021/07/21/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%B8%AA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6hint%E5%B7%A5%E5%85%B7%E7%9A%84%E6%83%B3%E6%B3%95/</link>
            <category>思维火花</category>
            <pubDate>Wed, 21 Jul 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#始&#34;&gt;#&lt;/a&gt; 始&lt;/h2&gt;
&lt;p&gt;最近试着弄了下一直想做的博客，选主题选的眼都花了（笑），然而年幼无知的我还不知道后面有什么东西在等着我 —— 指一大堆乱七八糟的配置文件，它们天真而又纯洁，等着我来带它们走向光明的未来。&lt;br&gt;
其实认真的讲，我个人始终有一种追求：人应该尽可能少的进行没有意义劳作，而很明显，如果我想以一种预先约定的格式进行输入，而需要我全面学习这个约定，否则便无从知晓某一项是否被包含在约定中，也算是部分无意义 —— 个人来讲倾向于在尝试中学习，如果能在输入的时候把可用的项目全部提供就很令人舒适，要是命名又十分直观真是再感激不过了。&lt;/p&gt;
&lt;p&gt;其实在此之前有遇到过包含自动提示的配置文件，比如 &lt;code&gt;VS Code&lt;/code&gt;  自身的配置文件，或者是 &lt;code&gt;Visual Studio&lt;/code&gt;  的 &lt;code&gt;JSON 架构&lt;/code&gt; ，都能实现配置项、配置值的提示，不过一个是靠编辑器本身开挂，一个普及度低写起来也繁琐的一 * 并且还是依赖了编辑器的外挂从网络获取架构信息。&lt;br&gt;
所以我想的是为配置文件写一个配置文件，再写个编辑器扩展什么的来进行 Hint。编写起来也得很简洁才行，方便使用。&lt;span class=&#34;spoiler&#34; title=&#34;...&#34;&gt;毕竟我也是个臭敲代码的，代码以外的东西越简单越好&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;初步的设计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#初步的设计&#34;&gt;#&lt;/a&gt; 初步的设计&lt;/h2&gt;
&lt;h3 id=&#34;specs&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#specs&#34;&gt;#&lt;/a&gt; Specs&lt;/h3&gt;
&lt;p&gt;文件名： &lt;code&gt;.hintc&lt;/code&gt; &lt;br&gt;
 对于同目录内所有子目录均有效，且覆盖父目录中的 &lt;code&gt;.hintc&lt;/code&gt;  文件&lt;/p&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;config.json &amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    * connection &amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        * username &amp;#x3D; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        * password &amp;#x3D; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    - options &amp;gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - encryption &amp;#x3D; bool&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - method &amp;#x3D; (foo, bar)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - alternate_conn : @connection &amp;#x2F;&amp;#x2F; @config.json&amp;gt;connection&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - timeout &amp;#x3D; number&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        - load :&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            * type &amp;#x3D; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            * data &amp;#x3D; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当前预计使用如下关键字 &lt;code&gt;string&lt;/code&gt;   &lt;code&gt;bool&lt;/code&gt;   &lt;code&gt;number&lt;/code&gt;   &lt;code&gt;date&lt;/code&gt;   &lt;code&gt;&amp;gt;&lt;/code&gt;   &lt;code&gt;=&lt;/code&gt;   &lt;code&gt;:&lt;/code&gt;   &lt;code&gt;*&lt;/code&gt;   &lt;code&gt;-&lt;/code&gt;   &lt;code&gt;@&lt;/code&gt;   &lt;code&gt;(&lt;/code&gt;   &lt;code&gt;)&lt;/code&gt;   &lt;code&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;  表明项包含后续定义的字段&lt;br&gt;
 &lt;code&gt;=&lt;/code&gt;  表明该项接受一个直接值&lt;br&gt;
 &lt;code&gt;:&lt;/code&gt;  表明项接受一个其后类型的数组&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;  声明该项在父项中为必须项&lt;br&gt;
 &lt;code&gt;-&lt;/code&gt;  声明该项在父项中为可选项&lt;/p&gt;
&lt;p&gt;&lt;code&gt;string&lt;/code&gt;   &lt;code&gt;bool&lt;/code&gt;   &lt;code&gt;number&lt;/code&gt;   &lt;code&gt;date&lt;/code&gt;  等字符串于值类型标识&lt;br&gt;
 &lt;code&gt;@&lt;/code&gt;  后接一个已经定义过的项，其值与指向的项内容相同&lt;br&gt;
 &lt;code&gt;(&lt;/code&gt;   &lt;code&gt;)&lt;/code&gt;  用于表示一个列表，其值为其中任意一个元素&lt;br&gt;
 &lt;code&gt;,&lt;/code&gt;  元素分隔&lt;/p&gt;
&lt;div class=&#34;note info note&#34;&gt;
&lt;p&gt;该类符号用于进行值验证，与正则表达式接近，但似乎无法实现详细的提示，需要进一步实现尝试。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;从声明文件生成其配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从声明文件生成其配置文件&#34;&gt;#&lt;/a&gt; 从声明文件生成其配置文件&lt;/h3&gt;
&lt;p&gt;既然这么一个声明文件是具体配置无关的，那么理应可以通过扩展的形式支持多种配置文件。 e.g. JSON, yaml … &lt;s&gt;似乎一笔带过了什么难搞的东西&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;那么反过来从这一个声明文件生成一个样例配置文件应该也是可行的，于是就愉快的把坑挖大了。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;还没想好名字，不如叫 ConfHint 吧，后缀名确定是 hintc 了吗？&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;spoiler blur&#34; title=&#34;...&#34;&gt;h 这个字母是真烦，前面可以接 80% 的字母都不意外&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
